<?php

/**
 * Implements hook_form_alter().
 */
function sitemod_form_alter(&$form, &$form_state, $form_id) {
  switch ($form_id) {
    case 'cause_node_form':
      $form['#validate'][] = 'sitemod_cause_node_validate';
      $form['title']['#description'] = t('The First Letter Of Each Word Must Be In Caps. 3-5 word max.');

      break;

    case 'apachesolr_search_custom_page_search_form':
      $form['#attributes']['class'][] = 'col-xs-12 col-sm-10 col-sm-offset-1';
      $form['basic']['submit']['#attributes']['class'][] = 'btn-default';
      $form['basic']['submit']['#value'] = 'Go';
      break;
  }
}

/**
 * Custom validation for research area field in cause nodes
 *
 * Check if a top level research area has been selected
 */
function sitemod_cause_node_validate($form, &$form_state) {
  $lang = $form['field_research_area']['#language'];
  $top_level_selected = false;

  // Check if empty
  if ((count($form_state['values']['field_research_area'][$lang]) == 1) && ($form_state['values']['field_research_area'][$lang][0]['tid'] == NULL)) {
    return form_set_error('field_research_area', t('You must select a top-level (parent) research area.  Example: Life or Technology.'));
  }

  // Check if one is top level
  foreach ($form_state['values']['field_research_area'][$lang] as $research_area) {
    $parent = taxonomy_get_parents($research_area['tid']);
    if (empty($parent)) {
      $top_level_selected = true;
    }
  }

  if (!$top_level_selected) {
    form_set_error('field_research_area', t('You must select a top-level (parent) research area.  Example: Life or Technology.'));
  }
  
}

/**
 * Changing the text for share links
 */
function sitemod_service_links_alter(&$links) {
  $links['facebook']['name'] = t('Share on Facebook');
  $links['twitter']['name'] = t('Share on Twitter');
  $links['linkedin']['name'] = t('Share on LinkedIn');
}


/**
 * Used in display suite field "Search result - node link"
 */
function sitemod_node_link($entity) {
  if (isset($entity->nid)) {
    $alias = drupal_get_path_alias('node/' . $entity->nid);
    $full_path = url($alias, array('absolute' => true));
    $options = array(
      'attributes' => array(
        'class' => array('search-teaser-link'),
      ),
    );
    return l($full_path, $alias, $options);
  }
}