<?php

/**
 * Implements hook_block_info().
 *
 * This hook declares what blocks are provided by the module.
 */
function basic_page_sidebar_text_block_info() {
  $blocks['basic_page_sidebar_text'] = array(
    'info' => t('Basic Page Sidebar Text'),
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 *
 * This hook generates the contents of the blocks themselves.
 */
function basic_page_sidebar_text_block_view($delta = '') {
  // The $delta parameter tells us which block is being requested.
  switch ($delta) {
    case 'basic_page_sidebar_text':
      $block['content'] = basic_page_sidebar_text_contents($delta);
      break;
  }
  return $block;
}

/**
 * A module-defined block content function.
 */
function basic_page_sidebar_text_contents($which_block) {
  switch ($which_block) {
    case 'basic_page_sidebar_text':
      $arg1 = arg(1);

      if ((arg(0) == 'node') && !empty($arg1)) {
        global $user;

        $wrapper = entity_metadata_wrapper('node', $arg1);
        $field_sidebar_text = $wrapper->field_sidebar_text->value();

        // TODO: remove this.
        watchdog('sidebar text', 'Sidebar display for NID %nid, UID %uid (%roles): !text', array(
          '%nid' => $arg1,
          '%uid' => $user->uid,
          '%roles' => implode(',', $user->roles),
          '!text' => '<pre>' . htmlspecialchars($field_sidebar_text['value']) . '</pre>,'
        ), WATCHDOG_INFO);

        if (!empty($field_sidebar_text)) {
          return $field_sidebar_text['value'];
        }
      }
  }
}